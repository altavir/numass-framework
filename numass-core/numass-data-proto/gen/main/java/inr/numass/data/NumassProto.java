// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inr/numas/numass-proto.proto

package inr.numass.data;

public final class NumassProto {
  private NumassProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:inr.numass.data.Point)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    java.util.List<inr.numass.data.NumassProto.Point.Channel> 
        getChannelsList();
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    inr.numass.data.NumassProto.Point.Channel getChannels(int index);
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    int getChannelsCount();
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    java.util.List<? extends inr.numass.data.NumassProto.Point.ChannelOrBuilder> 
        getChannelsOrBuilderList();
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    inr.numass.data.NumassProto.Point.ChannelOrBuilder getChannelsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code inr.numass.data.Point}
   */
  public static final class Point extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:inr.numass.data.Point)
      PointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Point.newBuilder() to construct.
    private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point() {
      channels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Point();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                channels_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel>();
                mutable_bitField0_ |= 0x00000001;
              }
              channels_.add(
                  input.readMessage(inr.numass.data.NumassProto.Point.Channel.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          channels_ = java.util.Collections.unmodifiableList(channels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              inr.numass.data.NumassProto.Point.class, inr.numass.data.NumassProto.Point.Builder.class);
    }

    public interface ChannelOrBuilder extends
        // @@protoc_insertion_point(interface_extends:inr.numass.data.Point.Channel)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The number of measuring channel
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      long getId();

      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      java.util.List<inr.numass.data.NumassProto.Point.Channel.Block> 
          getBlocksList();
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      inr.numass.data.NumassProto.Point.Channel.Block getBlocks(int index);
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      int getBlocksCount();
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder> 
          getBlocksOrBuilderList();
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder getBlocksOrBuilder(
          int index);
    }
    /**
     * <pre>
     * A single channel for multichannel detector readout
     * </pre>
     *
     * Protobuf type {@code inr.numass.data.Point.Channel}
     */
    public static final class Channel extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:inr.numass.data.Point.Channel)
        ChannelOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Channel.newBuilder() to construct.
      private Channel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Channel() {
        blocks_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Channel();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Channel(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                id_ = input.readUInt64();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  blocks_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel.Block>();
                  mutable_bitField0_ |= 0x00000001;
                }
                blocks_.add(
                    input.readMessage(inr.numass.data.NumassProto.Point.Channel.Block.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            blocks_ = java.util.Collections.unmodifiableList(blocks_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inr.numass.data.NumassProto.Point.Channel.class, inr.numass.data.NumassProto.Point.Channel.Builder.class);
      }

      public interface BlockOrBuilder extends
          // @@protoc_insertion_point(interface_extends:inr.numass.data.Point.Channel.Block)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Block start in epoch nanos
         * </pre>
         *
         * <code>uint64 time = 1;</code>
         * @return The time.
         */
        long getTime();

        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame> 
            getFramesList();
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        inr.numass.data.NumassProto.Point.Channel.Block.Frame getFrames(int index);
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        int getFramesCount();
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder> 
            getFramesOrBuilderList();
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder getFramesOrBuilder(
            int index);

        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         * @return Whether the events field is set.
         */
        boolean hasEvents();
        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         * @return The events.
         */
        inr.numass.data.NumassProto.Point.Channel.Block.Events getEvents();
        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         */
        inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder getEventsOrBuilder();

        /**
         * <pre>
         * block size in nanos. If missing, take from meta.
         * </pre>
         *
         * <code>uint64 length = 4;</code>
         * @return The length.
         */
        long getLength();

        /**
         * <pre>
         * tick size in nanos. Obsolete, to be removed
         * </pre>
         *
         * <code>uint64 bin_size = 5;</code>
         * @return The binSize.
         */
        long getBinSize();
      }
      /**
       * <pre>
       *A continuous measurement block
       * </pre>
       *
       * Protobuf type {@code inr.numass.data.Point.Channel.Block}
       */
      public static final class Block extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:inr.numass.data.Point.Channel.Block)
          BlockOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Block.newBuilder() to construct.
        private Block(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Block() {
          frames_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Block();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Block(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  time_ = input.readUInt64();
                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    frames_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel.Block.Frame>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  frames_.add(
                      input.readMessage(inr.numass.data.NumassProto.Point.Channel.Block.Frame.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder subBuilder = null;
                  if (events_ != null) {
                    subBuilder = events_.toBuilder();
                  }
                  events_ = input.readMessage(inr.numass.data.NumassProto.Point.Channel.Block.Events.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(events_);
                    events_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 32: {

                  length_ = input.readUInt64();
                  break;
                }
                case 40: {

                  binSize_ = input.readUInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              frames_ = java.util.Collections.unmodifiableList(frames_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  inr.numass.data.NumassProto.Point.Channel.Block.class, inr.numass.data.NumassProto.Point.Channel.Block.Builder.class);
        }

        public interface FrameOrBuilder extends
            // @@protoc_insertion_point(interface_extends:inr.numass.data.Point.Channel.Block.Frame)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Time in nanos from the beginning of the block
           * </pre>
           *
           * <code>uint64 time = 1;</code>
           * @return The time.
           */
          long getTime();

          /**
           * <pre>
           * Frame data as an array of int16 mesured in arbitrary channels
           * </pre>
           *
           * <code>bytes data = 2;</code>
           * @return The data.
           */
          com.google.protobuf.ByteString getData();
        }
        /**
         * <pre>
         * Raw data frame
         * </pre>
         *
         * Protobuf type {@code inr.numass.data.Point.Channel.Block.Frame}
         */
        public static final class Frame extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:inr.numass.data.Point.Channel.Block.Frame)
            FrameOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Frame.newBuilder() to construct.
          private Frame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Frame() {
            data_ = com.google.protobuf.ByteString.EMPTY;
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Frame();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Frame(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {

                    time_ = input.readUInt64();
                    break;
                  }
                  case 18: {

                    data_ = input.readBytes();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Frame_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    inr.numass.data.NumassProto.Point.Channel.Block.Frame.class, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder.class);
          }

          public static final int TIME_FIELD_NUMBER = 1;
          private long time_;
          /**
           * <pre>
           * Time in nanos from the beginning of the block
           * </pre>
           *
           * <code>uint64 time = 1;</code>
           * @return The time.
           */
          @java.lang.Override
          public long getTime() {
            return time_;
          }

          public static final int DATA_FIELD_NUMBER = 2;
          private com.google.protobuf.ByteString data_;
          /**
           * <pre>
           * Frame data as an array of int16 mesured in arbitrary channels
           * </pre>
           *
           * <code>bytes data = 2;</code>
           * @return The data.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getData() {
            return data_;
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (time_ != 0L) {
              output.writeUInt64(1, time_);
            }
            if (!data_.isEmpty()) {
              output.writeBytes(2, data_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (time_ != 0L) {
              size += com.google.protobuf.CodedOutputStream
                .computeUInt64Size(1, time_);
            }
            if (!data_.isEmpty()) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, data_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof inr.numass.data.NumassProto.Point.Channel.Block.Frame)) {
              return super.equals(obj);
            }
            inr.numass.data.NumassProto.Point.Channel.Block.Frame other = (inr.numass.data.NumassProto.Point.Channel.Block.Frame) obj;

            if (getTime()
                != other.getTime()) return false;
            if (!getData()
                .equals(other.getData())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTime());
            hash = (37 * hash) + DATA_FIELD_NUMBER;
            hash = (53 * hash) + getData().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(inr.numass.data.NumassProto.Point.Channel.Block.Frame prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * <pre>
           * Raw data frame
           * </pre>
           *
           * Protobuf type {@code inr.numass.data.Point.Channel.Block.Frame}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:inr.numass.data.Point.Channel.Block.Frame)
              inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Frame_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      inr.numass.data.NumassProto.Point.Channel.Block.Frame.class, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder.class);
            }

            // Construct using inr.numass.data.NumassProto.Point.Channel.Block.Frame.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              time_ = 0L;

              data_ = com.google.protobuf.ByteString.EMPTY;

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor;
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Frame getDefaultInstanceForType() {
              return inr.numass.data.NumassProto.Point.Channel.Block.Frame.getDefaultInstance();
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Frame build() {
              inr.numass.data.NumassProto.Point.Channel.Block.Frame result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Frame buildPartial() {
              inr.numass.data.NumassProto.Point.Channel.Block.Frame result = new inr.numass.data.NumassProto.Point.Channel.Block.Frame(this);
              result.time_ = time_;
              result.data_ = data_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof inr.numass.data.NumassProto.Point.Channel.Block.Frame) {
                return mergeFrom((inr.numass.data.NumassProto.Point.Channel.Block.Frame)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(inr.numass.data.NumassProto.Point.Channel.Block.Frame other) {
              if (other == inr.numass.data.NumassProto.Point.Channel.Block.Frame.getDefaultInstance()) return this;
              if (other.getTime() != 0L) {
                setTime(other.getTime());
              }
              if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
                setData(other.getData());
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              inr.numass.data.NumassProto.Point.Channel.Block.Frame parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (inr.numass.data.NumassProto.Point.Channel.Block.Frame) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private long time_ ;
            /**
             * <pre>
             * Time in nanos from the beginning of the block
             * </pre>
             *
             * <code>uint64 time = 1;</code>
             * @return The time.
             */
            @java.lang.Override
            public long getTime() {
              return time_;
            }
            /**
             * <pre>
             * Time in nanos from the beginning of the block
             * </pre>
             *
             * <code>uint64 time = 1;</code>
             * @param value The time to set.
             * @return This builder for chaining.
             */
            public Builder setTime(long value) {
              
              time_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Time in nanos from the beginning of the block
             * </pre>
             *
             * <code>uint64 time = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearTime() {
              
              time_ = 0L;
              onChanged();
              return this;
            }

            private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * Frame data as an array of int16 mesured in arbitrary channels
             * </pre>
             *
             * <code>bytes data = 2;</code>
             * @return The data.
             */
            @java.lang.Override
            public com.google.protobuf.ByteString getData() {
              return data_;
            }
            /**
             * <pre>
             * Frame data as an array of int16 mesured in arbitrary channels
             * </pre>
             *
             * <code>bytes data = 2;</code>
             * @param value The data to set.
             * @return This builder for chaining.
             */
            public Builder setData(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              data_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Frame data as an array of int16 mesured in arbitrary channels
             * </pre>
             *
             * <code>bytes data = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearData() {
              
              data_ = getDefaultInstance().getData();
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:inr.numass.data.Point.Channel.Block.Frame)
          }

          // @@protoc_insertion_point(class_scope:inr.numass.data.Point.Channel.Block.Frame)
          private static final inr.numass.data.NumassProto.Point.Channel.Block.Frame DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new inr.numass.data.NumassProto.Point.Channel.Block.Frame();
          }

          public static inr.numass.data.NumassProto.Point.Channel.Block.Frame getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Frame>
              PARSER = new com.google.protobuf.AbstractParser<Frame>() {
            @java.lang.Override
            public Frame parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Frame(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Frame> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Frame> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public inr.numass.data.NumassProto.Point.Channel.Block.Frame getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface EventsOrBuilder extends
            // @@protoc_insertion_point(interface_extends:inr.numass.data.Point.Channel.Block.Events)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @return A list containing the times.
           */
          java.util.List<java.lang.Long> getTimesList();
          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @return The count of times.
           */
          int getTimesCount();
          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @param index The index of the element to return.
           * @return The times at the given index.
           */
          long getTimes(int index);

          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @return A list containing the amplitudes.
           */
          java.util.List<java.lang.Long> getAmplitudesList();
          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @return The count of amplitudes.
           */
          int getAmplitudesCount();
          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @param index The index of the element to return.
           * @return The amplitudes at the given index.
           */
          long getAmplitudes(int index);
        }
        /**
         * <pre>
         * Event block obtained directly from  device of from frame analysis
         * In order to save space, times and amplitudes are in separate arrays.
         * Amplitude and time with the same index correspond to the same event
         * </pre>
         *
         * Protobuf type {@code inr.numass.data.Point.Channel.Block.Events}
         */
        public static final class Events extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:inr.numass.data.Point.Channel.Block.Events)
            EventsOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Events.newBuilder() to construct.
          private Events(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Events() {
            times_ = emptyLongList();
            amplitudes_ = emptyLongList();
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Events();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Events(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                      times_ = newLongList();
                      mutable_bitField0_ |= 0x00000001;
                    }
                    times_.addLong(input.readUInt64());
                    break;
                  }
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                      times_ = newLongList();
                      mutable_bitField0_ |= 0x00000001;
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      times_.addLong(input.readUInt64());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 16: {
                    if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                      amplitudes_ = newLongList();
                      mutable_bitField0_ |= 0x00000002;
                    }
                    amplitudes_.addLong(input.readUInt64());
                    break;
                  }
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                      amplitudes_ = newLongList();
                      mutable_bitField0_ |= 0x00000002;
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      amplitudes_.addLong(input.readUInt64());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000001) != 0)) {
                times_.makeImmutable(); // C
              }
              if (((mutable_bitField0_ & 0x00000002) != 0)) {
                amplitudes_.makeImmutable(); // C
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Events_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    inr.numass.data.NumassProto.Point.Channel.Block.Events.class, inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder.class);
          }

          public static final int TIMES_FIELD_NUMBER = 1;
          private com.google.protobuf.Internal.LongList times_;
          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @return A list containing the times.
           */
          @java.lang.Override
          public java.util.List<java.lang.Long>
              getTimesList() {
            return times_;
          }
          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @return The count of times.
           */
          public int getTimesCount() {
            return times_.size();
          }
          /**
           * <pre>
           * Array of time in nanos from the beginning of the block
           * </pre>
           *
           * <code>repeated uint64 times = 1;</code>
           * @param index The index of the element to return.
           * @return The times at the given index.
           */
          public long getTimes(int index) {
            return times_.getLong(index);
          }
          private int timesMemoizedSerializedSize = -1;

          public static final int AMPLITUDES_FIELD_NUMBER = 2;
          private com.google.protobuf.Internal.LongList amplitudes_;
          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @return A list containing the amplitudes.
           */
          @java.lang.Override
          public java.util.List<java.lang.Long>
              getAmplitudesList() {
            return amplitudes_;
          }
          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @return The count of amplitudes.
           */
          public int getAmplitudesCount() {
            return amplitudes_.size();
          }
          /**
           * <pre>
           * Array of amplitudes of events in channels
           * </pre>
           *
           * <code>repeated uint64 amplitudes = 2;</code>
           * @param index The index of the element to return.
           * @return The amplitudes at the given index.
           */
          public long getAmplitudes(int index) {
            return amplitudes_.getLong(index);
          }
          private int amplitudesMemoizedSerializedSize = -1;

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (getTimesList().size() > 0) {
              output.writeUInt32NoTag(10);
              output.writeUInt32NoTag(timesMemoizedSerializedSize);
            }
            for (int i = 0; i < times_.size(); i++) {
              output.writeUInt64NoTag(times_.getLong(i));
            }
            if (getAmplitudesList().size() > 0) {
              output.writeUInt32NoTag(18);
              output.writeUInt32NoTag(amplitudesMemoizedSerializedSize);
            }
            for (int i = 0; i < amplitudes_.size(); i++) {
              output.writeUInt64NoTag(amplitudes_.getLong(i));
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
              int dataSize = 0;
              for (int i = 0; i < times_.size(); i++) {
                dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt64SizeNoTag(times_.getLong(i));
              }
              size += dataSize;
              if (!getTimesList().isEmpty()) {
                size += 1;
                size += com.google.protobuf.CodedOutputStream
                    .computeInt32SizeNoTag(dataSize);
              }
              timesMemoizedSerializedSize = dataSize;
            }
            {
              int dataSize = 0;
              for (int i = 0; i < amplitudes_.size(); i++) {
                dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt64SizeNoTag(amplitudes_.getLong(i));
              }
              size += dataSize;
              if (!getAmplitudesList().isEmpty()) {
                size += 1;
                size += com.google.protobuf.CodedOutputStream
                    .computeInt32SizeNoTag(dataSize);
              }
              amplitudesMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof inr.numass.data.NumassProto.Point.Channel.Block.Events)) {
              return super.equals(obj);
            }
            inr.numass.data.NumassProto.Point.Channel.Block.Events other = (inr.numass.data.NumassProto.Point.Channel.Block.Events) obj;

            if (!getTimesList()
                .equals(other.getTimesList())) return false;
            if (!getAmplitudesList()
                .equals(other.getAmplitudesList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getTimesCount() > 0) {
              hash = (37 * hash) + TIMES_FIELD_NUMBER;
              hash = (53 * hash) + getTimesList().hashCode();
            }
            if (getAmplitudesCount() > 0) {
              hash = (37 * hash) + AMPLITUDES_FIELD_NUMBER;
              hash = (53 * hash) + getAmplitudesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static inr.numass.data.NumassProto.Point.Channel.Block.Events parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(inr.numass.data.NumassProto.Point.Channel.Block.Events prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * <pre>
           * Event block obtained directly from  device of from frame analysis
           * In order to save space, times and amplitudes are in separate arrays.
           * Amplitude and time with the same index correspond to the same event
           * </pre>
           *
           * Protobuf type {@code inr.numass.data.Point.Channel.Block.Events}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:inr.numass.data.Point.Channel.Block.Events)
              inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Events_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      inr.numass.data.NumassProto.Point.Channel.Block.Events.class, inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder.class);
            }

            // Construct using inr.numass.data.NumassProto.Point.Channel.Block.Events.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              times_ = emptyLongList();
              bitField0_ = (bitField0_ & ~0x00000001);
              amplitudes_ = emptyLongList();
              bitField0_ = (bitField0_ & ~0x00000002);
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor;
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Events getDefaultInstanceForType() {
              return inr.numass.data.NumassProto.Point.Channel.Block.Events.getDefaultInstance();
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Events build() {
              inr.numass.data.NumassProto.Point.Channel.Block.Events result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public inr.numass.data.NumassProto.Point.Channel.Block.Events buildPartial() {
              inr.numass.data.NumassProto.Point.Channel.Block.Events result = new inr.numass.data.NumassProto.Point.Channel.Block.Events(this);
              int from_bitField0_ = bitField0_;
              if (((bitField0_ & 0x00000001) != 0)) {
                times_.makeImmutable();
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.times_ = times_;
              if (((bitField0_ & 0x00000002) != 0)) {
                amplitudes_.makeImmutable();
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.amplitudes_ = amplitudes_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof inr.numass.data.NumassProto.Point.Channel.Block.Events) {
                return mergeFrom((inr.numass.data.NumassProto.Point.Channel.Block.Events)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(inr.numass.data.NumassProto.Point.Channel.Block.Events other) {
              if (other == inr.numass.data.NumassProto.Point.Channel.Block.Events.getDefaultInstance()) return this;
              if (!other.times_.isEmpty()) {
                if (times_.isEmpty()) {
                  times_ = other.times_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureTimesIsMutable();
                  times_.addAll(other.times_);
                }
                onChanged();
              }
              if (!other.amplitudes_.isEmpty()) {
                if (amplitudes_.isEmpty()) {
                  amplitudes_ = other.amplitudes_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureAmplitudesIsMutable();
                  amplitudes_.addAll(other.amplitudes_);
                }
                onChanged();
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              inr.numass.data.NumassProto.Point.Channel.Block.Events parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (inr.numass.data.NumassProto.Point.Channel.Block.Events) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private com.google.protobuf.Internal.LongList times_ = emptyLongList();
            private void ensureTimesIsMutable() {
              if (!((bitField0_ & 0x00000001) != 0)) {
                times_ = mutableCopy(times_);
                bitField0_ |= 0x00000001;
               }
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @return A list containing the times.
             */
            public java.util.List<java.lang.Long>
                getTimesList() {
              return ((bitField0_ & 0x00000001) != 0) ?
                       java.util.Collections.unmodifiableList(times_) : times_;
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @return The count of times.
             */
            public int getTimesCount() {
              return times_.size();
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @param index The index of the element to return.
             * @return The times at the given index.
             */
            public long getTimes(int index) {
              return times_.getLong(index);
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @param index The index to set the value at.
             * @param value The times to set.
             * @return This builder for chaining.
             */
            public Builder setTimes(
                int index, long value) {
              ensureTimesIsMutable();
              times_.setLong(index, value);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @param value The times to add.
             * @return This builder for chaining.
             */
            public Builder addTimes(long value) {
              ensureTimesIsMutable();
              times_.addLong(value);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @param values The times to add.
             * @return This builder for chaining.
             */
            public Builder addAllTimes(
                java.lang.Iterable<? extends java.lang.Long> values) {
              ensureTimesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, times_);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of time in nanos from the beginning of the block
             * </pre>
             *
             * <code>repeated uint64 times = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearTimes() {
              times_ = emptyLongList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
              return this;
            }

            private com.google.protobuf.Internal.LongList amplitudes_ = emptyLongList();
            private void ensureAmplitudesIsMutable() {
              if (!((bitField0_ & 0x00000002) != 0)) {
                amplitudes_ = mutableCopy(amplitudes_);
                bitField0_ |= 0x00000002;
               }
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @return A list containing the amplitudes.
             */
            public java.util.List<java.lang.Long>
                getAmplitudesList() {
              return ((bitField0_ & 0x00000002) != 0) ?
                       java.util.Collections.unmodifiableList(amplitudes_) : amplitudes_;
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @return The count of amplitudes.
             */
            public int getAmplitudesCount() {
              return amplitudes_.size();
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @param index The index of the element to return.
             * @return The amplitudes at the given index.
             */
            public long getAmplitudes(int index) {
              return amplitudes_.getLong(index);
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @param index The index to set the value at.
             * @param value The amplitudes to set.
             * @return This builder for chaining.
             */
            public Builder setAmplitudes(
                int index, long value) {
              ensureAmplitudesIsMutable();
              amplitudes_.setLong(index, value);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @param value The amplitudes to add.
             * @return This builder for chaining.
             */
            public Builder addAmplitudes(long value) {
              ensureAmplitudesIsMutable();
              amplitudes_.addLong(value);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @param values The amplitudes to add.
             * @return This builder for chaining.
             */
            public Builder addAllAmplitudes(
                java.lang.Iterable<? extends java.lang.Long> values) {
              ensureAmplitudesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, amplitudes_);
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Array of amplitudes of events in channels
             * </pre>
             *
             * <code>repeated uint64 amplitudes = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearAmplitudes() {
              amplitudes_ = emptyLongList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:inr.numass.data.Point.Channel.Block.Events)
          }

          // @@protoc_insertion_point(class_scope:inr.numass.data.Point.Channel.Block.Events)
          private static final inr.numass.data.NumassProto.Point.Channel.Block.Events DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new inr.numass.data.NumassProto.Point.Channel.Block.Events();
          }

          public static inr.numass.data.NumassProto.Point.Channel.Block.Events getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Events>
              PARSER = new com.google.protobuf.AbstractParser<Events>() {
            @java.lang.Override
            public Events parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Events(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Events> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Events> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public inr.numass.data.NumassProto.Point.Channel.Block.Events getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public static final int TIME_FIELD_NUMBER = 1;
        private long time_;
        /**
         * <pre>
         * Block start in epoch nanos
         * </pre>
         *
         * <code>uint64 time = 1;</code>
         * @return The time.
         */
        @java.lang.Override
        public long getTime() {
          return time_;
        }

        public static final int FRAMES_FIELD_NUMBER = 2;
        private java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame> frames_;
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        @java.lang.Override
        public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame> getFramesList() {
          return frames_;
        }
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        @java.lang.Override
        public java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder> 
            getFramesOrBuilderList() {
          return frames_;
        }
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        @java.lang.Override
        public int getFramesCount() {
          return frames_.size();
        }
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel.Block.Frame getFrames(int index) {
          return frames_.get(index);
        }
        /**
         * <pre>
         * Frames array
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
         */
        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder getFramesOrBuilder(
            int index) {
          return frames_.get(index);
        }

        public static final int EVENTS_FIELD_NUMBER = 3;
        private inr.numass.data.NumassProto.Point.Channel.Block.Events events_;
        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         * @return Whether the events field is set.
         */
        @java.lang.Override
        public boolean hasEvents() {
          return events_ != null;
        }
        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         * @return The events.
         */
        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel.Block.Events getEvents() {
          return events_ == null ? inr.numass.data.NumassProto.Point.Channel.Block.Events.getDefaultInstance() : events_;
        }
        /**
         * <pre>
         * Events array
         * </pre>
         *
         * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
         */
        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder getEventsOrBuilder() {
          return getEvents();
        }

        public static final int LENGTH_FIELD_NUMBER = 4;
        private long length_;
        /**
         * <pre>
         * block size in nanos. If missing, take from meta.
         * </pre>
         *
         * <code>uint64 length = 4;</code>
         * @return The length.
         */
        @java.lang.Override
        public long getLength() {
          return length_;
        }

        public static final int BIN_SIZE_FIELD_NUMBER = 5;
        private long binSize_;
        /**
         * <pre>
         * tick size in nanos. Obsolete, to be removed
         * </pre>
         *
         * <code>uint64 bin_size = 5;</code>
         * @return The binSize.
         */
        @java.lang.Override
        public long getBinSize() {
          return binSize_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (time_ != 0L) {
            output.writeUInt64(1, time_);
          }
          for (int i = 0; i < frames_.size(); i++) {
            output.writeMessage(2, frames_.get(i));
          }
          if (events_ != null) {
            output.writeMessage(3, getEvents());
          }
          if (length_ != 0L) {
            output.writeUInt64(4, length_);
          }
          if (binSize_ != 0L) {
            output.writeUInt64(5, binSize_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (time_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(1, time_);
          }
          for (int i = 0; i < frames_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, frames_.get(i));
          }
          if (events_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getEvents());
          }
          if (length_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, length_);
          }
          if (binSize_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(5, binSize_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof inr.numass.data.NumassProto.Point.Channel.Block)) {
            return super.equals(obj);
          }
          inr.numass.data.NumassProto.Point.Channel.Block other = (inr.numass.data.NumassProto.Point.Channel.Block) obj;

          if (getTime()
              != other.getTime()) return false;
          if (!getFramesList()
              .equals(other.getFramesList())) return false;
          if (hasEvents() != other.hasEvents()) return false;
          if (hasEvents()) {
            if (!getEvents()
                .equals(other.getEvents())) return false;
          }
          if (getLength()
              != other.getLength()) return false;
          if (getBinSize()
              != other.getBinSize()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + TIME_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTime());
          if (getFramesCount() > 0) {
            hash = (37 * hash) + FRAMES_FIELD_NUMBER;
            hash = (53 * hash) + getFramesList().hashCode();
          }
          if (hasEvents()) {
            hash = (37 * hash) + EVENTS_FIELD_NUMBER;
            hash = (53 * hash) + getEvents().hashCode();
          }
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLength());
          hash = (37 * hash) + BIN_SIZE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getBinSize());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static inr.numass.data.NumassProto.Point.Channel.Block parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(inr.numass.data.NumassProto.Point.Channel.Block prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         *A continuous measurement block
         * </pre>
         *
         * Protobuf type {@code inr.numass.data.Point.Channel.Block}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:inr.numass.data.Point.Channel.Block)
            inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    inr.numass.data.NumassProto.Point.Channel.Block.class, inr.numass.data.NumassProto.Point.Channel.Block.Builder.class);
          }

          // Construct using inr.numass.data.NumassProto.Point.Channel.Block.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getFramesFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            time_ = 0L;

            if (framesBuilder_ == null) {
              frames_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              framesBuilder_.clear();
            }
            if (eventsBuilder_ == null) {
              events_ = null;
            } else {
              events_ = null;
              eventsBuilder_ = null;
            }
            length_ = 0L;

            binSize_ = 0L;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_Block_descriptor;
          }

          @java.lang.Override
          public inr.numass.data.NumassProto.Point.Channel.Block getDefaultInstanceForType() {
            return inr.numass.data.NumassProto.Point.Channel.Block.getDefaultInstance();
          }

          @java.lang.Override
          public inr.numass.data.NumassProto.Point.Channel.Block build() {
            inr.numass.data.NumassProto.Point.Channel.Block result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public inr.numass.data.NumassProto.Point.Channel.Block buildPartial() {
            inr.numass.data.NumassProto.Point.Channel.Block result = new inr.numass.data.NumassProto.Point.Channel.Block(this);
            int from_bitField0_ = bitField0_;
            result.time_ = time_;
            if (framesBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                frames_ = java.util.Collections.unmodifiableList(frames_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.frames_ = frames_;
            } else {
              result.frames_ = framesBuilder_.build();
            }
            if (eventsBuilder_ == null) {
              result.events_ = events_;
            } else {
              result.events_ = eventsBuilder_.build();
            }
            result.length_ = length_;
            result.binSize_ = binSize_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof inr.numass.data.NumassProto.Point.Channel.Block) {
              return mergeFrom((inr.numass.data.NumassProto.Point.Channel.Block)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(inr.numass.data.NumassProto.Point.Channel.Block other) {
            if (other == inr.numass.data.NumassProto.Point.Channel.Block.getDefaultInstance()) return this;
            if (other.getTime() != 0L) {
              setTime(other.getTime());
            }
            if (framesBuilder_ == null) {
              if (!other.frames_.isEmpty()) {
                if (frames_.isEmpty()) {
                  frames_ = other.frames_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureFramesIsMutable();
                  frames_.addAll(other.frames_);
                }
                onChanged();
              }
            } else {
              if (!other.frames_.isEmpty()) {
                if (framesBuilder_.isEmpty()) {
                  framesBuilder_.dispose();
                  framesBuilder_ = null;
                  frames_ = other.frames_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  framesBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getFramesFieldBuilder() : null;
                } else {
                  framesBuilder_.addAllMessages(other.frames_);
                }
              }
            }
            if (other.hasEvents()) {
              mergeEvents(other.getEvents());
            }
            if (other.getLength() != 0L) {
              setLength(other.getLength());
            }
            if (other.getBinSize() != 0L) {
              setBinSize(other.getBinSize());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            inr.numass.data.NumassProto.Point.Channel.Block parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (inr.numass.data.NumassProto.Point.Channel.Block) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private long time_ ;
          /**
           * <pre>
           * Block start in epoch nanos
           * </pre>
           *
           * <code>uint64 time = 1;</code>
           * @return The time.
           */
          @java.lang.Override
          public long getTime() {
            return time_;
          }
          /**
           * <pre>
           * Block start in epoch nanos
           * </pre>
           *
           * <code>uint64 time = 1;</code>
           * @param value The time to set.
           * @return This builder for chaining.
           */
          public Builder setTime(long value) {
            
            time_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Block start in epoch nanos
           * </pre>
           *
           * <code>uint64 time = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearTime() {
            
            time_ = 0L;
            onChanged();
            return this;
          }

          private java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame> frames_ =
            java.util.Collections.emptyList();
          private void ensureFramesIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              frames_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel.Block.Frame>(frames_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              inr.numass.data.NumassProto.Point.Channel.Block.Frame, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder, inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder> framesBuilder_;

          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame> getFramesList() {
            if (framesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(frames_);
            } else {
              return framesBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public int getFramesCount() {
            if (framesBuilder_ == null) {
              return frames_.size();
            } else {
              return framesBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Frame getFrames(int index) {
            if (framesBuilder_ == null) {
              return frames_.get(index);
            } else {
              return framesBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder setFrames(
              int index, inr.numass.data.NumassProto.Point.Channel.Block.Frame value) {
            if (framesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureFramesIsMutable();
              frames_.set(index, value);
              onChanged();
            } else {
              framesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder setFrames(
              int index, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder builderForValue) {
            if (framesBuilder_ == null) {
              ensureFramesIsMutable();
              frames_.set(index, builderForValue.build());
              onChanged();
            } else {
              framesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder addFrames(inr.numass.data.NumassProto.Point.Channel.Block.Frame value) {
            if (framesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureFramesIsMutable();
              frames_.add(value);
              onChanged();
            } else {
              framesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder addFrames(
              int index, inr.numass.data.NumassProto.Point.Channel.Block.Frame value) {
            if (framesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureFramesIsMutable();
              frames_.add(index, value);
              onChanged();
            } else {
              framesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder addFrames(
              inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder builderForValue) {
            if (framesBuilder_ == null) {
              ensureFramesIsMutable();
              frames_.add(builderForValue.build());
              onChanged();
            } else {
              framesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder addFrames(
              int index, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder builderForValue) {
            if (framesBuilder_ == null) {
              ensureFramesIsMutable();
              frames_.add(index, builderForValue.build());
              onChanged();
            } else {
              framesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder addAllFrames(
              java.lang.Iterable<? extends inr.numass.data.NumassProto.Point.Channel.Block.Frame> values) {
            if (framesBuilder_ == null) {
              ensureFramesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, frames_);
              onChanged();
            } else {
              framesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder clearFrames() {
            if (framesBuilder_ == null) {
              frames_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              framesBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public Builder removeFrames(int index) {
            if (framesBuilder_ == null) {
              ensureFramesIsMutable();
              frames_.remove(index);
              onChanged();
            } else {
              framesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder getFramesBuilder(
              int index) {
            return getFramesFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder getFramesOrBuilder(
              int index) {
            if (framesBuilder_ == null) {
              return frames_.get(index);  } else {
              return framesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder> 
               getFramesOrBuilderList() {
            if (framesBuilder_ != null) {
              return framesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(frames_);
            }
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder addFramesBuilder() {
            return getFramesFieldBuilder().addBuilder(
                inr.numass.data.NumassProto.Point.Channel.Block.Frame.getDefaultInstance());
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder addFramesBuilder(
              int index) {
            return getFramesFieldBuilder().addBuilder(
                index, inr.numass.data.NumassProto.Point.Channel.Block.Frame.getDefaultInstance());
          }
          /**
           * <pre>
           * Frames array
           * </pre>
           *
           * <code>repeated .inr.numass.data.Point.Channel.Block.Frame frames = 2;</code>
           */
          public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder> 
               getFramesBuilderList() {
            return getFramesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              inr.numass.data.NumassProto.Point.Channel.Block.Frame, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder, inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder> 
              getFramesFieldBuilder() {
            if (framesBuilder_ == null) {
              framesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  inr.numass.data.NumassProto.Point.Channel.Block.Frame, inr.numass.data.NumassProto.Point.Channel.Block.Frame.Builder, inr.numass.data.NumassProto.Point.Channel.Block.FrameOrBuilder>(
                      frames_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              frames_ = null;
            }
            return framesBuilder_;
          }

          private inr.numass.data.NumassProto.Point.Channel.Block.Events events_;
          private com.google.protobuf.SingleFieldBuilderV3<
              inr.numass.data.NumassProto.Point.Channel.Block.Events, inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder, inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder> eventsBuilder_;
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           * @return Whether the events field is set.
           */
          public boolean hasEvents() {
            return eventsBuilder_ != null || events_ != null;
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           * @return The events.
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Events getEvents() {
            if (eventsBuilder_ == null) {
              return events_ == null ? inr.numass.data.NumassProto.Point.Channel.Block.Events.getDefaultInstance() : events_;
            } else {
              return eventsBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public Builder setEvents(inr.numass.data.NumassProto.Point.Channel.Block.Events value) {
            if (eventsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              events_ = value;
              onChanged();
            } else {
              eventsBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public Builder setEvents(
              inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder builderForValue) {
            if (eventsBuilder_ == null) {
              events_ = builderForValue.build();
              onChanged();
            } else {
              eventsBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public Builder mergeEvents(inr.numass.data.NumassProto.Point.Channel.Block.Events value) {
            if (eventsBuilder_ == null) {
              if (events_ != null) {
                events_ =
                  inr.numass.data.NumassProto.Point.Channel.Block.Events.newBuilder(events_).mergeFrom(value).buildPartial();
              } else {
                events_ = value;
              }
              onChanged();
            } else {
              eventsBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public Builder clearEvents() {
            if (eventsBuilder_ == null) {
              events_ = null;
              onChanged();
            } else {
              events_ = null;
              eventsBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder getEventsBuilder() {
            
            onChanged();
            return getEventsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          public inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder getEventsOrBuilder() {
            if (eventsBuilder_ != null) {
              return eventsBuilder_.getMessageOrBuilder();
            } else {
              return events_ == null ?
                  inr.numass.data.NumassProto.Point.Channel.Block.Events.getDefaultInstance() : events_;
            }
          }
          /**
           * <pre>
           * Events array
           * </pre>
           *
           * <code>.inr.numass.data.Point.Channel.Block.Events events = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              inr.numass.data.NumassProto.Point.Channel.Block.Events, inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder, inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder> 
              getEventsFieldBuilder() {
            if (eventsBuilder_ == null) {
              eventsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  inr.numass.data.NumassProto.Point.Channel.Block.Events, inr.numass.data.NumassProto.Point.Channel.Block.Events.Builder, inr.numass.data.NumassProto.Point.Channel.Block.EventsOrBuilder>(
                      getEvents(),
                      getParentForChildren(),
                      isClean());
              events_ = null;
            }
            return eventsBuilder_;
          }

          private long length_ ;
          /**
           * <pre>
           * block size in nanos. If missing, take from meta.
           * </pre>
           *
           * <code>uint64 length = 4;</code>
           * @return The length.
           */
          @java.lang.Override
          public long getLength() {
            return length_;
          }
          /**
           * <pre>
           * block size in nanos. If missing, take from meta.
           * </pre>
           *
           * <code>uint64 length = 4;</code>
           * @param value The length to set.
           * @return This builder for chaining.
           */
          public Builder setLength(long value) {
            
            length_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * block size in nanos. If missing, take from meta.
           * </pre>
           *
           * <code>uint64 length = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearLength() {
            
            length_ = 0L;
            onChanged();
            return this;
          }

          private long binSize_ ;
          /**
           * <pre>
           * tick size in nanos. Obsolete, to be removed
           * </pre>
           *
           * <code>uint64 bin_size = 5;</code>
           * @return The binSize.
           */
          @java.lang.Override
          public long getBinSize() {
            return binSize_;
          }
          /**
           * <pre>
           * tick size in nanos. Obsolete, to be removed
           * </pre>
           *
           * <code>uint64 bin_size = 5;</code>
           * @param value The binSize to set.
           * @return This builder for chaining.
           */
          public Builder setBinSize(long value) {
            
            binSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * tick size in nanos. Obsolete, to be removed
           * </pre>
           *
           * <code>uint64 bin_size = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearBinSize() {
            
            binSize_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:inr.numass.data.Point.Channel.Block)
        }

        // @@protoc_insertion_point(class_scope:inr.numass.data.Point.Channel.Block)
        private static final inr.numass.data.NumassProto.Point.Channel.Block DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new inr.numass.data.NumassProto.Point.Channel.Block();
        }

        public static inr.numass.data.NumassProto.Point.Channel.Block getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Block>
            PARSER = new com.google.protobuf.AbstractParser<Block>() {
          @java.lang.Override
          public Block parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Block(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Block> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Block> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel.Block getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int ID_FIELD_NUMBER = 1;
      private long id_;
      /**
       * <pre>
       * The number of measuring channel
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }

      public static final int BLOCKS_FIELD_NUMBER = 2;
      private java.util.List<inr.numass.data.NumassProto.Point.Channel.Block> blocks_;
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      @java.lang.Override
      public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block> getBlocksList() {
        return blocks_;
      }
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder> 
          getBlocksOrBuilderList() {
        return blocks_;
      }
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      @java.lang.Override
      public int getBlocksCount() {
        return blocks_.size();
      }
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      @java.lang.Override
      public inr.numass.data.NumassProto.Point.Channel.Block getBlocks(int index) {
        return blocks_.get(index);
      }
      /**
       * <pre>
       * Blocks
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
       */
      @java.lang.Override
      public inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder getBlocksOrBuilder(
          int index) {
        return blocks_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0L) {
          output.writeUInt64(1, id_);
        }
        for (int i = 0; i < blocks_.size(); i++) {
          output.writeMessage(2, blocks_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, id_);
        }
        for (int i = 0; i < blocks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, blocks_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof inr.numass.data.NumassProto.Point.Channel)) {
          return super.equals(obj);
        }
        inr.numass.data.NumassProto.Point.Channel other = (inr.numass.data.NumassProto.Point.Channel) obj;

        if (getId()
            != other.getId()) return false;
        if (!getBlocksList()
            .equals(other.getBlocksList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
        if (getBlocksCount() > 0) {
          hash = (37 * hash) + BLOCKS_FIELD_NUMBER;
          hash = (53 * hash) + getBlocksList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static inr.numass.data.NumassProto.Point.Channel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(inr.numass.data.NumassProto.Point.Channel prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A single channel for multichannel detector readout
       * </pre>
       *
       * Protobuf type {@code inr.numass.data.Point.Channel}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:inr.numass.data.Point.Channel)
          inr.numass.data.NumassProto.Point.ChannelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  inr.numass.data.NumassProto.Point.Channel.class, inr.numass.data.NumassProto.Point.Channel.Builder.class);
        }

        // Construct using inr.numass.data.NumassProto.Point.Channel.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getBlocksFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = 0L;

          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_Channel_descriptor;
        }

        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel getDefaultInstanceForType() {
          return inr.numass.data.NumassProto.Point.Channel.getDefaultInstance();
        }

        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel build() {
          inr.numass.data.NumassProto.Point.Channel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public inr.numass.data.NumassProto.Point.Channel buildPartial() {
          inr.numass.data.NumassProto.Point.Channel result = new inr.numass.data.NumassProto.Point.Channel(this);
          int from_bitField0_ = bitField0_;
          result.id_ = id_;
          if (blocksBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              blocks_ = java.util.Collections.unmodifiableList(blocks_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.blocks_ = blocks_;
          } else {
            result.blocks_ = blocksBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof inr.numass.data.NumassProto.Point.Channel) {
            return mergeFrom((inr.numass.data.NumassProto.Point.Channel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(inr.numass.data.NumassProto.Point.Channel other) {
          if (other == inr.numass.data.NumassProto.Point.Channel.getDefaultInstance()) return this;
          if (other.getId() != 0L) {
            setId(other.getId());
          }
          if (blocksBuilder_ == null) {
            if (!other.blocks_.isEmpty()) {
              if (blocks_.isEmpty()) {
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureBlocksIsMutable();
                blocks_.addAll(other.blocks_);
              }
              onChanged();
            }
          } else {
            if (!other.blocks_.isEmpty()) {
              if (blocksBuilder_.isEmpty()) {
                blocksBuilder_.dispose();
                blocksBuilder_ = null;
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000001);
                blocksBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getBlocksFieldBuilder() : null;
              } else {
                blocksBuilder_.addAllMessages(other.blocks_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          inr.numass.data.NumassProto.Point.Channel parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (inr.numass.data.NumassProto.Point.Channel) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long id_ ;
        /**
         * <pre>
         * The number of measuring channel
         * </pre>
         *
         * <code>uint64 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public long getId() {
          return id_;
        }
        /**
         * <pre>
         * The number of measuring channel
         * </pre>
         *
         * <code>uint64 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(long value) {
          
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of measuring channel
         * </pre>
         *
         * <code>uint64 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          
          id_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<inr.numass.data.NumassProto.Point.Channel.Block> blocks_ =
          java.util.Collections.emptyList();
        private void ensureBlocksIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            blocks_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel.Block>(blocks_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            inr.numass.data.NumassProto.Point.Channel.Block, inr.numass.data.NumassProto.Point.Channel.Block.Builder, inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder> blocksBuilder_;

        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block> getBlocksList() {
          if (blocksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(blocks_);
          } else {
            return blocksBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public int getBlocksCount() {
          if (blocksBuilder_ == null) {
            return blocks_.size();
          } else {
            return blocksBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public inr.numass.data.NumassProto.Point.Channel.Block getBlocks(int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);
          } else {
            return blocksBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder setBlocks(
            int index, inr.numass.data.NumassProto.Point.Channel.Block value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.set(index, value);
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder setBlocks(
            int index, inr.numass.data.NumassProto.Point.Channel.Block.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.set(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder addBlocks(inr.numass.data.NumassProto.Point.Channel.Block value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder addBlocks(
            int index, inr.numass.data.NumassProto.Point.Channel.Block value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(index, value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder addBlocks(
            inr.numass.data.NumassProto.Point.Channel.Block.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder addBlocks(
            int index, inr.numass.data.NumassProto.Point.Channel.Block.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder addAllBlocks(
            java.lang.Iterable<? extends inr.numass.data.NumassProto.Point.Channel.Block> values) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, blocks_);
            onChanged();
          } else {
            blocksBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder clearBlocks() {
          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public Builder removeBlocks(int index) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.remove(index);
            onChanged();
          } else {
            blocksBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public inr.numass.data.NumassProto.Point.Channel.Block.Builder getBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder getBlocksOrBuilder(
            int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);  } else {
            return blocksBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public java.util.List<? extends inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder> 
             getBlocksOrBuilderList() {
          if (blocksBuilder_ != null) {
            return blocksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(blocks_);
          }
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public inr.numass.data.NumassProto.Point.Channel.Block.Builder addBlocksBuilder() {
          return getBlocksFieldBuilder().addBuilder(
              inr.numass.data.NumassProto.Point.Channel.Block.getDefaultInstance());
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public inr.numass.data.NumassProto.Point.Channel.Block.Builder addBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().addBuilder(
              index, inr.numass.data.NumassProto.Point.Channel.Block.getDefaultInstance());
        }
        /**
         * <pre>
         * Blocks
         * </pre>
         *
         * <code>repeated .inr.numass.data.Point.Channel.Block blocks = 2;</code>
         */
        public java.util.List<inr.numass.data.NumassProto.Point.Channel.Block.Builder> 
             getBlocksBuilderList() {
          return getBlocksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            inr.numass.data.NumassProto.Point.Channel.Block, inr.numass.data.NumassProto.Point.Channel.Block.Builder, inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder> 
            getBlocksFieldBuilder() {
          if (blocksBuilder_ == null) {
            blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                inr.numass.data.NumassProto.Point.Channel.Block, inr.numass.data.NumassProto.Point.Channel.Block.Builder, inr.numass.data.NumassProto.Point.Channel.BlockOrBuilder>(
                    blocks_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            blocks_ = null;
          }
          return blocksBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:inr.numass.data.Point.Channel)
      }

      // @@protoc_insertion_point(class_scope:inr.numass.data.Point.Channel)
      private static final inr.numass.data.NumassProto.Point.Channel DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new inr.numass.data.NumassProto.Point.Channel();
      }

      public static inr.numass.data.NumassProto.Point.Channel getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Channel>
          PARSER = new com.google.protobuf.AbstractParser<Channel>() {
        @java.lang.Override
        public Channel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Channel(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Channel> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Channel> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public inr.numass.data.NumassProto.Point.Channel getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CHANNELS_FIELD_NUMBER = 1;
    private java.util.List<inr.numass.data.NumassProto.Point.Channel> channels_;
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    @java.lang.Override
    public java.util.List<inr.numass.data.NumassProto.Point.Channel> getChannelsList() {
      return channels_;
    }
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends inr.numass.data.NumassProto.Point.ChannelOrBuilder> 
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    @java.lang.Override
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    @java.lang.Override
    public inr.numass.data.NumassProto.Point.Channel getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <pre>
     * Array of measuring channels
     * </pre>
     *
     * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
     */
    @java.lang.Override
    public inr.numass.data.NumassProto.Point.ChannelOrBuilder getChannelsOrBuilder(
        int index) {
      return channels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < channels_.size(); i++) {
        output.writeMessage(1, channels_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < channels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, channels_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof inr.numass.data.NumassProto.Point)) {
        return super.equals(obj);
      }
      inr.numass.data.NumassProto.Point other = (inr.numass.data.NumassProto.Point) obj;

      if (!getChannelsList()
          .equals(other.getChannelsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChannelsCount() > 0) {
        hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static inr.numass.data.NumassProto.Point parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static inr.numass.data.NumassProto.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static inr.numass.data.NumassProto.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static inr.numass.data.NumassProto.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(inr.numass.data.NumassProto.Point prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code inr.numass.data.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:inr.numass.data.Point)
        inr.numass.data.NumassProto.PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                inr.numass.data.NumassProto.Point.class, inr.numass.data.NumassProto.Point.Builder.class);
      }

      // Construct using inr.numass.data.NumassProto.Point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChannelsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return inr.numass.data.NumassProto.internal_static_inr_numass_data_Point_descriptor;
      }

      @java.lang.Override
      public inr.numass.data.NumassProto.Point getDefaultInstanceForType() {
        return inr.numass.data.NumassProto.Point.getDefaultInstance();
      }

      @java.lang.Override
      public inr.numass.data.NumassProto.Point build() {
        inr.numass.data.NumassProto.Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public inr.numass.data.NumassProto.Point buildPartial() {
        inr.numass.data.NumassProto.Point result = new inr.numass.data.NumassProto.Point(this);
        int from_bitField0_ = bitField0_;
        if (channelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channels_ = java.util.Collections.unmodifiableList(channels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channels_ = channels_;
        } else {
          result.channels_ = channelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof inr.numass.data.NumassProto.Point) {
          return mergeFrom((inr.numass.data.NumassProto.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(inr.numass.data.NumassProto.Point other) {
        if (other == inr.numass.data.NumassProto.Point.getDefaultInstance()) return this;
        if (channelsBuilder_ == null) {
          if (!other.channels_.isEmpty()) {
            if (channels_.isEmpty()) {
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelsIsMutable();
              channels_.addAll(other.channels_);
            }
            onChanged();
          }
        } else {
          if (!other.channels_.isEmpty()) {
            if (channelsBuilder_.isEmpty()) {
              channelsBuilder_.dispose();
              channelsBuilder_ = null;
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelsFieldBuilder() : null;
            } else {
              channelsBuilder_.addAllMessages(other.channels_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        inr.numass.data.NumassProto.Point parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (inr.numass.data.NumassProto.Point) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<inr.numass.data.NumassProto.Point.Channel> channels_ =
        java.util.Collections.emptyList();
      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channels_ = new java.util.ArrayList<inr.numass.data.NumassProto.Point.Channel>(channels_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          inr.numass.data.NumassProto.Point.Channel, inr.numass.data.NumassProto.Point.Channel.Builder, inr.numass.data.NumassProto.Point.ChannelOrBuilder> channelsBuilder_;

      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public java.util.List<inr.numass.data.NumassProto.Point.Channel> getChannelsList() {
        if (channelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channels_);
        } else {
          return channelsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public int getChannelsCount() {
        if (channelsBuilder_ == null) {
          return channels_.size();
        } else {
          return channelsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public inr.numass.data.NumassProto.Point.Channel getChannels(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder setChannels(
          int index, inr.numass.data.NumassProto.Point.Channel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.set(index, value);
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder setChannels(
          int index, inr.numass.data.NumassProto.Point.Channel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder addChannels(inr.numass.data.NumassProto.Point.Channel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder addChannels(
          int index, inr.numass.data.NumassProto.Point.Channel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(index, value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder addChannels(
          inr.numass.data.NumassProto.Point.Channel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder addChannels(
          int index, inr.numass.data.NumassProto.Point.Channel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<? extends inr.numass.data.NumassProto.Point.Channel> values) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channels_);
          onChanged();
        } else {
          channelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder clearChannels() {
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public Builder removeChannels(int index) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.remove(index);
          onChanged();
        } else {
          channelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public inr.numass.data.NumassProto.Point.Channel.Builder getChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public inr.numass.data.NumassProto.Point.ChannelOrBuilder getChannelsOrBuilder(
          int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);  } else {
          return channelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public java.util.List<? extends inr.numass.data.NumassProto.Point.ChannelOrBuilder> 
           getChannelsOrBuilderList() {
        if (channelsBuilder_ != null) {
          return channelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channels_);
        }
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public inr.numass.data.NumassProto.Point.Channel.Builder addChannelsBuilder() {
        return getChannelsFieldBuilder().addBuilder(
            inr.numass.data.NumassProto.Point.Channel.getDefaultInstance());
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public inr.numass.data.NumassProto.Point.Channel.Builder addChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().addBuilder(
            index, inr.numass.data.NumassProto.Point.Channel.getDefaultInstance());
      }
      /**
       * <pre>
       * Array of measuring channels
       * </pre>
       *
       * <code>repeated .inr.numass.data.Point.Channel channels = 1;</code>
       */
      public java.util.List<inr.numass.data.NumassProto.Point.Channel.Builder> 
           getChannelsBuilderList() {
        return getChannelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          inr.numass.data.NumassProto.Point.Channel, inr.numass.data.NumassProto.Point.Channel.Builder, inr.numass.data.NumassProto.Point.ChannelOrBuilder> 
          getChannelsFieldBuilder() {
        if (channelsBuilder_ == null) {
          channelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              inr.numass.data.NumassProto.Point.Channel, inr.numass.data.NumassProto.Point.Channel.Builder, inr.numass.data.NumassProto.Point.ChannelOrBuilder>(
                  channels_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          channels_ = null;
        }
        return channelsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:inr.numass.data.Point)
    }

    // @@protoc_insertion_point(class_scope:inr.numass.data.Point)
    private static final inr.numass.data.NumassProto.Point DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new inr.numass.data.NumassProto.Point();
    }

    public static inr.numass.data.NumassProto.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Point>
        PARSER = new com.google.protobuf.AbstractParser<Point>() {
      @java.lang.Override
      public Point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public inr.numass.data.NumassProto.Point getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inr_numass_data_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inr_numass_data_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inr_numass_data_Point_Channel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inr_numass_data_Point_Channel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inr_numass_data_Point_Channel_Block_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inr_numass_data_Point_Channel_Block_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inr_numass_data_Point_Channel_Block_Frame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inr_numass_data_Point_Channel_Block_Events_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034inr/numas/numass-proto.proto\022\017inr.numa" +
      "ss.data\"\214\003\n\005Point\0220\n\010channels\030\001 \003(\0132\036.in" +
      "r.numass.data.Point.Channel\032\320\002\n\007Channel\022" +
      "\n\n\002id\030\001 \001(\004\0224\n\006blocks\030\002 \003(\0132$.inr.numass" +
      ".data.Point.Channel.Block\032\202\002\n\005Block\022\014\n\004t" +
      "ime\030\001 \001(\004\022:\n\006frames\030\002 \003(\0132*.inr.numass.d" +
      "ata.Point.Channel.Block.Frame\022;\n\006events\030" +
      "\003 \001(\0132+.inr.numass.data.Point.Channel.Bl" +
      "ock.Events\022\016\n\006length\030\004 \001(\004\022\020\n\010bin_size\030\005" +
      " \001(\004\032#\n\005Frame\022\014\n\004time\030\001 \001(\004\022\014\n\004data\030\002 \001(" +
      "\014\032+\n\006Events\022\r\n\005times\030\001 \003(\004\022\022\n\namplitudes" +
      "\030\002 \003(\004b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_inr_numass_data_Point_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_inr_numass_data_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inr_numass_data_Point_descriptor,
        new java.lang.String[] { "Channels", });
    internal_static_inr_numass_data_Point_Channel_descriptor =
      internal_static_inr_numass_data_Point_descriptor.getNestedTypes().get(0);
    internal_static_inr_numass_data_Point_Channel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inr_numass_data_Point_Channel_descriptor,
        new java.lang.String[] { "Id", "Blocks", });
    internal_static_inr_numass_data_Point_Channel_Block_descriptor =
      internal_static_inr_numass_data_Point_Channel_descriptor.getNestedTypes().get(0);
    internal_static_inr_numass_data_Point_Channel_Block_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inr_numass_data_Point_Channel_Block_descriptor,
        new java.lang.String[] { "Time", "Frames", "Events", "Length", "BinSize", });
    internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor =
      internal_static_inr_numass_data_Point_Channel_Block_descriptor.getNestedTypes().get(0);
    internal_static_inr_numass_data_Point_Channel_Block_Frame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inr_numass_data_Point_Channel_Block_Frame_descriptor,
        new java.lang.String[] { "Time", "Data", });
    internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor =
      internal_static_inr_numass_data_Point_Channel_Block_descriptor.getNestedTypes().get(1);
    internal_static_inr_numass_data_Point_Channel_Block_Events_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inr_numass_data_Point_Channel_Block_Events_descriptor,
        new java.lang.String[] { "Times", "Amplitudes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
